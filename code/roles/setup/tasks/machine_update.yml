---
- name: Check freespace on root
  shell: df / --output\=avail | tail -1
  register: root_freespace
      
- fail:
    msg: root directory does not have the minimum space required to continue (3Gb requested). 
  when: root_freespace.stdout|float is lt 3000000 

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes
    force_apt_get: yes
    cache_valid_time: 3600
  when: ansible_pkg_mgr == "apt"

- name: Update yum cache
  ansible.builtin.yum:
    update_cache: yes
  when: ansible_pkg_mgr == "yum"

- name: Upgrade all apt packages
  apt: upgrade=dist force_apt_get=yes
  when: ansible_pkg_mgr == "apt"
  register: upgrade

- name: Upgrade all packages
  yum:
    name: '*'
    state: latest
  when: ansible_pkg_mgr == "yum"
  register: upgrade

- name: Ensure that a base set of software packages are installed (apt).
  apt:
    pkg: "{{ apt_essentials }}"
    state: latest
    autoclean: yes
    autoremove: yes
    purge: yes
  when: ansible_pkg_mgr == "apt"

- name: Ensure that a base set of software packages are installed (yum).
  ansible.builtin.yum:
    name: "{{ apt_essentials }}"
    state: present
    autoremove: true
  when: ansible_pkg_mgr == "yum"


- name: Check if a reboot is needed on all servers
  register: reboot_required_file
  stat: path=/var/run/reboot-required get_md5=no

- name: Show reboot_required_file
  ansible.builtin.debug:
    msg:
    - "{{ reboot_required_file }}"

- name: Reboot the box if kernel updated
  reboot:
    msg: "Reboot initiated by Ansible for kernel updates"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_required_file.stat.exists